#!/bin/bash

# Запустить игровой цикл
start()
{
while :
do
echo "Используйте w,a,s,d для перемещения, q для выхода"
read -n 1 -s
case $REPLY in
w)
[ $EMPTY -lt 12 ] && change_state $(( $EMPTY + 4 ))
;;
a)
COL=$(( $EMPTY % 4 ))
[ $COL -lt 3 ] && change_state $(( $EMPTY + 1 ))
;;
s)
[ $EMPTY -gt 3 ] && change_state $(( $EMPTY - 4 ))
;;
d)
COL=$(( $EMPTY % 4 ))
[ $COL -gt 0 ] && change_state $(( $EMPTY - 1 ))
;;
q)
quit
;;
esac
draw_playground
check_win
done
}

# Вывести на экран игровое поле
draw_playground()
{
clear
D="+---------------+"
S="%s\n|%3s|%3s|%3s|%3s|\n"
printf $S $D ${M[0]:-" "} ${M[1]:-" "} ${M[2]:-" "} ${M[3]:-" "}
printf $S $D ${M[4]:-" "} ${M[5]:-" "} ${M[6]:-" "} ${M[7]:-" "}
printf $S $D ${M[8]:-" "} ${M[9]:-" "} ${M[10]:-" "} ${M[11]:-" "}
printf $S $D ${M[12]:-" "} ${M[13]:-" "} ${M[14]:-" "} ${M[15]:-" "}
echo $D
}

# Выйти из игры
quit()
{
while :
do
read -n 1 -s -p "Вы действительно хотите выйти [y/n]?"
case $REPLY in
y|Y) exit
;;
n|N) return
;;
esac
done
}

# Инициализация массива, который хранит состояние игры
init(){
M=()
EMPTY=
RANDOM=$RANDOM
for i in {1..15}
do
j=$(( RANDOM % 16 ))
while [[ ${M[j]} != "" ]]
do
j=$(( RANDOM % 16 ))
done
M[j]=$i
done
for i in {0..15}
do
[[ ${M[i]} == "" ]] && EMPTY=$i
done
draw_playground
}

# Изменить состояние игры
change_state()
{
M[$EMPTY]=${M[$1]}
M[$1]=""
EMPTY=$1
}

# Проверить, выиграл ли игрок
check_win()
{
for i in {0..14}
do
if [ "${M[i]}" != "$(( $i + 1 ))" ]
then
return
fi
done
echo "И перед нами победитель! Еще партию [y/n]?"
while :
do
read -n 1 -s
case $REPLY in
y|Y) 
init
break
;;
n|N) exit
;;
esac
done
}

init
start

